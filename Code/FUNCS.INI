define button "WifiPingCmdIn", "WifiPingCmdIn()"

signal void WifiPingCmdIn (void) 
{
		/* Ether Header */
		uip_buf[0]  = 0x00;  //DST_MAC[5]
		uip_buf[1]  = 0x06;  //DST_MAC[4]
		uip_buf[2]  = 0x25;  //DST_MAC[3]
		uip_buf[3]  = 0x24;  //DST_MAC[2]
		uip_buf[4]  = 0x7c;  //DST_MAC[1]
		uip_buf[5]  = 0x2c;  //DST_MAC[0]
		uip_buf[6]  = 0x00;  //SRC_MAC[5]
		uip_buf[7]  = 0x06;  //SRC_MAC[4]
		uip_buf[8]  = 0x25;  //SRC_MAC[3]
		uip_buf[9]  = 0x24;  //SRC_MAC[2]
		uip_buf[10] = 0x7c;  //SRC_MAC[1]
		uip_buf[11] = 0x2d;  //SRC_MAC[0]
		uip_buf[12] = 0x08;  //TYPE IP
		uip_buf[13] = 0x00;  //TYPE	IP	
		/* IP Header */
		uip_buf[14]  = 0x45;  //IP version IP HdrLen
		uip_buf[15]  = 0x00;  //Service
		uip_buf[16]  = 0x00;  //IPLEN (H)
		uip_buf[17]  = 0x3c;  //IPLEN (L)  - 60 bytes
		uip_buf[18]  = 0x00;  //IDENT (H)
		uip_buf[19]  = 0x01;  //IDENT (L)
		uip_buf[20]  = 0x00;  //FRAGS (H)
		uip_buf[21]  = 0x00;  //FRAGS (L)
		uip_buf[22]  = 0x64;  //TTL = 100 (0x64)
		uip_buf[23]  = 0x01;  //PCOL = ICMP
		uip_buf[24] = 0xfc;  //checksum (H)   
		uip_buf[25] = 0x9c;  //checksum (L)
		uip_buf[26] = 0xac;  //IPSRC = 172.
		uip_buf[27] = 0x10;  //IPSRC = 16.
		uip_buf[28] = 0x01;  //IPSRC = 1.
		uip_buf[29] = 0x02;  //IPSRC = 2
		uip_buf[30] = 0xac;  //IPDST = 172.
        uip_buf[31] = 0x10;  //IPDST = 16.
		uip_buf[32] = 0x01;  //IPDST = 1.
		uip_buf[33] = 0x01;  //IPDST = 1
		/* IP Data */
		/* ICMP HDR */
		uip_buf[34] = 0x08;  //TYPE = Echo rqst
		uip_buf[35] = 0x00;  //CODE = 0x00
		uip_buf[36] = 0x17;  //checksum (H)
		uip_buf[37] = 0x14;  //checksum (L)
		uip_buf[38] = 0x00;  //SeqNum   (H)
		uip_buf[39] = 0x01;  //SeqNum   (L)
		uip_buf[40] = 0x00;  //ident    (H)
		uip_buf[41] = 0x01;  //ident    (L)
		/* ICMP Data */
		uip_buf[42] = 0x82;  //Data[0]
		uip_buf[43] = 0xe6;  //Data[1]			
		uip_buf[44] = 0x42;  //Data[2]
		uip_buf[45] = 0x88;  //Data[3]
		uip_buf[46] = 0xcd;  //Data[4]
		uip_buf[47] = 0xbb;  //Data[5]
		uip_buf[48] = 0x0f;  //Data[6]
		uip_buf[49] = 0xa4;  //Data[7]
		uip_buf[50] = 0x96;  //Data[8]
		uip_buf[51] = 0x2c;  //Data[9]
		uip_buf[52] = 0xde;  //Data[10]
		uip_buf[53] = 0xf3;  //Data[11]
		uip_buf[54] = 0x5f;  //Data[12]
		uip_buf[55] = 0x3c;  //Data[13]
		uip_buf[56] = 0x50;  //Data[14]
		uip_buf[57] = 0x24;  //Data[15]
		uip_buf[58] = 0x61;  //Data[16]
		uip_buf[59] = 0xbf;  //Data[17]
		uip_buf[60] = 0xd7;  //Data[18]
		uip_buf[61] = 0xef;  //Data[19]
		uip_buf[62] = 0xd1;  //Data[20]
		uip_buf[63] = 0x16;  //Data[21]
		uip_buf[64] = 0xa1;  //Data[22]
		uip_buf[65] = 0xee;  //Data[23]
		uip_buf[66] = 0x75;  //Data[24]
		uip_buf[67] = 0x2c;  //Data[25]
		uip_buf[68] = 0xcb;  //Data[26]
		uip_buf[69] = 0xbb;  //Data[27]
		uip_buf[70] = 0x68;  //Data[28]
		uip_buf[71] = 0xb1;  //Data[29]
		uip_buf[72] = 0xc3;  //Data[30]
		uip_buf[73] = 0x4b;  //Data[31]

	twatch(0.5);	
}

	/* Control */
/*	uip_buf[0x00] = 0x00; //Status
	uip_buf[0x01] = 0x00; //Status
	uip_buf[0x02] = 0x00; //??
	uip_buf[0x03] = 0x00; //??
	uip_buf[0x04] = 0x00; //??
	uip_buf[0x05] = 0x00; //??

	uip_buf[0x06] = 0x55; //SwSupport
	uip_buf[0x07] = 0xaa; //SwSupport
	uip_buf[0x08] = 0x55; //SwSupport
	uip_buf[0x09] = 0xaa; //SwSupport
	uip_buf[0x0a] = 0x00; //Txrate
	uip_buf[0x0b] = 0x00; //RetryCount

	uip_buf[0x0c] = 0x00; //TX control
	uip_buf[0x0d] = HFA384x_TX_TXEX_SET(1)|HFA384x_TX_TXOK_SET(1); // TX control
	//uip_buf[0x0c] = HFA384x_TX_TXEX_SET(1)|HFA384x_TX_TXOK_SET(1); //TX control
	//uip_buf[0x0d] = 0x00; // TX control
*/
	/* 802.11 Header */
/*
	uip_buf[0x0e] = 0x00; //Frame Control
	uip_buf[0x0f] = 0x00; //Frame Control

	uip_buf[0x10] = 0x00; //Duration
	uip_buf[0x11] = 0x00; //ID

	uip_buf[0x12] = 0x00; //Addr1
	uip_buf[0x13] = 0x00; //Addr1
	uip_buf[0x14] = 0x00; //Addr1
	uip_buf[0x15] = 0x00; //Addr1
	uip_buf[0x16] = 0x00; //Addr1
	uip_buf[0x17] = 0x00; //Addr1

	uip_buf[0x18] = 0x00; //Addr2
	uip_buf[0x19] = 0x00; //Addr2
	uip_buf[0x1a] = 0x00; //Addr2
	uip_buf[0x1b] = 0x00; //Addr2
	uip_buf[0x1c] = 0x00; //Addr2
	uip_buf[0x1d] = 0x00; //Addr2

	uip_buf[0x1e] = 0x00; //Addr3
	uip_buf[0x1f] = 0x00; //Addr3
	uip_buf[0x20] = 0x00; //Addr3
	uip_buf[0x21] = 0x00; //Addr3
	uip_buf[0x22] = 0x00; //Addr3
	uip_buf[0x23] = 0x00; //Addr3

	uip_buf[0x24] = 0x00; // seq control
	uip_buf[0x25] = 0x00; // seq control

	uip_buf[0x26] = 0x00; //Addr4
	uip_buf[0x27] = 0x00; //Addr4 
	uip_buf[0x28] = 0x00; //Addr4
	uip_buf[0x29] = 0x00; //Addr4
	uip_buf[0x2a] = 0x00; //Addr4
	uip_buf[0x2b] = 0x00; //Addr4 

	//uip_buf[0x2c] = 0x1c;   //Datalen
	//uip_buf[0x2d] = 0x00; //Datalen

	uip_buf[0x2c] = 0x00;   //Datalen
	uip_buf[0x2d] = 0x00; //Datalen
*/
	/* 802.3 header */
/*
	uip_buf[0x2e] = 0x00; //Dest ADDR
	uip_buf[0x2f] = 0x03; //Dest ADDR
	uip_buf[0x30] = 0x47; //Dest ADDR
	uip_buf[0x31] = 0xb4; //Dest ADDR
	uip_buf[0x32] = 0x6c; //Dest ADDR
	uip_buf[0x33] = 0x20; //Dest ADDR
*/
/*
	uip_buf[0x2e] = 0x03; //Dest ADDR
	uip_buf[0x2f] = 0x00; //Dest ADDR
	uip_buf[0x30] = 0xb4; //Dest ADDR
	uip_buf[0x31] = 0x47; //Dest ADDR
	uip_buf[0x32] = 0x20; //Dest ADDR
	uip_buf[0x33] = 0x6c; //Dest ADDR
*/
/*	uip_buf[0x2e] = 0x04; //Dest ADDR
	uip_buf[0x2f] = 0x00; //Dest ADDR
	uip_buf[0x30] = 0x0f; //Dest ADDR
	uip_buf[0x31] = 0x5a; //Dest ADDR
	uip_buf[0x32] = 0x96; //Dest ADDR
	uip_buf[0x33] = 0x42; //Dest ADDR
*/
/*
	uip_buf[0x34] = 0x00; //Src ADDR
	uip_buf[0x35] = 0x06; //Src ADDR
	uip_buf[0x36] = 0x25; //Src ADDR
	uip_buf[0x37] = 0x24; //Src ADDR
	uip_buf[0x38] = 0x7c; //Src ADDR
	uip_buf[0x39] = 0x2c; //Src ADDR
*/

/*	uip_buf[0x34] = 0x06; //Src ADDR
	uip_buf[0x35] = 0x00; //Src ADDR
	uip_buf[0x36] = 0x24; //Src ADDR
	uip_buf[0x37] = 0x25; //Src ADDR
	uip_buf[0x38] = 0x2c; //Src ADDR
	uip_buf[0x39] = 0x7c; //Src ADDR
*/
/*
	uip_buf[0x32] = 0x00; //Src ADDR
	uip_buf[0x33] = 0x00; //Src ADDR
	uip_buf[0x34] = 0x00; //Src ADDR
	uip_buf[0x35] = 0x00; //Src ADDR
	uip_buf[0x36] = 0x00; //Src ADDR
	uip_buf[0x37] = 0x00; //Src ADDR
*/
/*
	uip_buf[0x3a] = 0x1c;   //Lenght
	uip_buf[0x3b] = 0x00; //Lenght
*/
	/* SNAP packet */
/*	uip_buf[0x3c] = 0xaa; //DSAP
	uip_buf[0x3d] = 0xaa; //SSAP

	uip_buf[0x3e] = 0x03; //Control
	
	uip_buf[0x3f] = 0x00; //OUI
	uip_buf[0x40] = 0x00; //OUI
	uip_buf[0x41] = 0x00; //OUI

	uip_buf[0x42] = 0x08; //arp type
	uip_buf[0x43] = 0x06; //arp type
*/
/*
	uip_buf[0x3c] = 0xaa; //DSAP
	uip_buf[0x3d] = 0xaa; //SSAP

	uip_buf[0x3e] = 0x00; //OUI
	
	uip_buf[0x3f] = 0x03; //Control
	uip_buf[0x40] = 0x00; //OUI
	uip_buf[0x41] = 0x00; //OUI

	uip_buf[0x42] = 0x06; //arp type
	uip_buf[0x43] = 0x08; //arp type
*/

	/* ARP Packet */
/*	uip_buf[0x3c] = 0x00; //HW Type
	uip_buf[0x3d] = 0x01; //HW Type

	uip_buf[0x3e] = 0x08; //PCOL Type
	uip_buf[0x3f] = 0x00; //Pcol Type
	
	uip_buf[0x40] = 0x06; //iplen
	uip_buf[0x41] = 0x04; //maclen

	uip_buf[0x42] = 0x00; //arp resp
	uip_buf[0x43] = 0x02; //arp resp

	uip_buf[0x44] = 0x00; //src MAC
	uip_buf[0x45] = 0x06; //src MAC 
	uip_buf[0x46] = 0x25; //src MAC
	uip_buf[0x47] = 0x24; //src MAC
	uip_buf[0x48] = 0x7c; //src MAC
	uip_buf[0x49] = 0x2c; //src MAC

	uip_buf[0x4a] = 0xc0; //src ip
	uip_buf[0x4b] = 0xa8; //src ip
	uip_buf[0x4c] = 0x01; //src ip
	uip_buf[0x4d] = 0x01; //src ip

	uip_buf[0x4e] = 0x00; //dst MAC
	uip_buf[0x4f] = 0x03; //dst MAC
	uip_buf[0x50] = 0x47; //dst MAC
	uip_buf[0x51] = 0xb4; //dst MAC
	uip_buf[0x52] = 0x6c; //dst MAC
	uip_buf[0x53] = 0x20; //dst MAC

	uip_buf[0x54] = 0xc0; //dst ip
	uip_buf[0x55] = 0xa8; //dst ip
	uip_buf[0x56] = 0x01; //dst ip
	uip_buf[0x57] = 0x32; //dst ip 
*/
/*
	uip_buf[0x3c] = 0x01; //HW Type
	uip_buf[0x3d] = 0x00; //HW Type

	uip_buf[0x3e] = 0x00; //PCOL Type
	uip_buf[0x3f] = 0x08; //Pcol Type
	
	uip_buf[0x40] = 0x04; //iplen
	uip_buf[0x41] = 0x06; //maclen

	uip_buf[0x42] = 0x02; //arp resp
	uip_buf[0x43] = 0x00; //arp resp

	uip_buf[0x44] = 0x06; //src MAC
	uip_buf[0x45] = 0x00; //src MAC 
	uip_buf[0x46] = 0x24; //src MAC
	uip_buf[0x47] = 0x25; //src MAC
	uip_buf[0x48] = 0x2c; //src MAC
	uip_buf[0x49] = 0x7c; //src MAC

	uip_buf[0x4a] = 0xa8; //src ip
	uip_buf[0x4b] = 0xc0; //src ip
	uip_buf[0x4c] = 0x01; //src ip
	uip_buf[0x4d] = 0x01; //src ip

	uip_buf[0x4e] = 0x03; //dst MAC
	uip_buf[0x4f] = 0x00; //dst MAC
	uip_buf[0x50] = 0xb4; //dst MAC
	uip_buf[0x51] = 0x47; //dst MAC
	uip_buf[0x52] = 0x20; //dst MAC
	uip_buf[0x53] = 0x6c; //dst MAC

	uip_buf[0x54] = 0xa8; //dst ip
	uip_buf[0x55] = 0xc1; //dst ip
	uip_buf[0x56] = 0x32; //dst ip
	uip_buf[0x57] = 0x01; //dst ip 
*/
/*	uip_buf[0x44] = 0x00; //HW Type
	uip_buf[0x45] = 0x01; //HW Type

	uip_buf[0x46] = 0x08; //PCOL Type
	uip_buf[0x47] = 0x00; //Pcol Type
	
	uip_buf[0x48] = 0x06; //iplen
	uip_buf[0x49] = 0x04; //maclen

	uip_buf[0x4a] = 0x00; //arp resp
	uip_buf[0x4b] = 0x02; //arp resp

	uip_buf[0x4c] = 0x00; //src MAC
	uip_buf[0x4d] = 0x06; //src MAC 
	uip_buf[0x4e] = 0x25; //src MAC
	uip_buf[0x4f] = 0x24; //src MAC
	uip_buf[0x50] = 0x7c; //src MAC
	uip_buf[0x51] = 0x2c; //src MAC

	uip_buf[0x52] = 0xc0; //src ip
	uip_buf[0x53] = 0xa8; //src ip
	uip_buf[0x54] = 0x01; //src ip
	uip_buf[0x55] = 0x01; //src ip

	uip_buf[0x56] = 0x00; //dst MAC
	uip_buf[0x57] = 0x03; //dst MAC
	uip_buf[0x58] = 0x47; //dst MAC
	uip_buf[0x59] = 0xb4; //dst MAC
	uip_buf[0x5a] = 0x6c; //dst MAC
	uip_buf[0x5b] = 0x20; //dst MAC

	uip_buf[0x5c] = 0xc0; //dst ip
	uip_buf[0x5d] = 0xa8; //dst ip
	uip_buf[0x5e] = 0x01; //dst ip
	uip_buf[0x5f] = 0x32; //dst ip 
*/
/*	uip_buf[0x44] = 0x01; //HW Type
	uip_buf[0x45] = 0x00; //HW Type

	uip_buf[0x46] = 0x00; //PCOL Type
	uip_buf[0x47] = 0x08; //Pcol Type
	
	uip_buf[0x48] = 0x04; //iplen
	uip_buf[0x49] = 0x06; //maclen

	uip_buf[0x4a] = 0x02; //arp resp
	uip_buf[0x4b] = 0x00; //arp resp

	uip_buf[0x4c] = 0x06; //src MAC
	uip_buf[0x4d] = 0x00; //src MAC 
	uip_buf[0x4e] = 0x24; //src MAC
	uip_buf[0x4f] = 0x25; //src MAC
	uip_buf[0x50] = 0x2c; //src MAC
	uip_buf[0x51] = 0x7c; //src MAC

	uip_buf[0x52] = 0xa8; //src ip
	uip_buf[0x53] = 0xc0; //src ip
	uip_buf[0x54] = 0x01; //src ip
	uip_buf[0x55] = 0x01; //src ip

	uip_buf[0x56] = 0x03; //dst MAC
	uip_buf[0x57] = 0x00; //dst MAC
	uip_buf[0x58] = 0xb4; //dst MAC
	uip_buf[0x59] = 0x47; //dst MAC
	uip_buf[0x5a] = 0x20; //dst MAC
	uip_buf[0x5b] = 0x6c; //dst MAC

	uip_buf[0x5c] = 0xa8; //dst ip
	uip_buf[0x5d] = 0xc0; //dst ip
	uip_buf[0x5e] = 0x32; //dst ip
	uip_buf[0x5f] = 0x01; //dst ip 
*/

